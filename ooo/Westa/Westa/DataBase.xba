<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE script:module PUBLIC "-//OpenOffice.org//DTD OfficeDocument 1.0//EN" "module.dtd">
<script:module xmlns:script="http://openoffice.org/2000/script" script:name="DataBase" script:language="StarBasic">REM  *****  BASIC  *****

sub start
	syncLocalDB()
end sub


&apos;¯¯¯¯¯¯¯¯¯¯¯¯
 sub initDB()
&apos;____________
	&apos;*** Datenbank registrieren und öffnen ***
	oDBContext = createUnoService(&quot;com.sun.star.sdb.DatabaseContext&quot;)

	&apos;*** Allokieren der Datenbank ***
	on error goto hSQL
		sDBSep = &quot;&quot;
		oDBSource = oDBContext.getByName(BASEPATH &amp; &quot;WestaMySQL.odb&quot;)
		oDBConnection = oDBSource.getConnection(&quot;westa&quot;, &quot;&quot;)
		oSQL = oDBConnection.createStatement()
		bLocale = false
		goto Weiter
	hSQL:
		on error goto fatalError:
		sDBSep = &quot;&quot;&quot;&quot;
&apos; 080128-SK: Zusammenführung der verschiedenen HSQL-DBs im Sourcen-Ordner: BASEPATH &gt; LOCALDBPATH
		oDBSource = oDBContext.getByName(LOCALDBPATH &amp; &quot;WestaHSQL.odb&quot;)
		oDBConnection = oDBSource.getConnection(&quot;&quot;, &quot;&quot;)
		oSQL = oDBConnection.createStatement()
		bLocale = true
	Weiter:
	on error goto 0
	exit sub
	fatalError:
		msgbox &quot;Es konnte keine geeignete Datenbank geöffnet werden.&quot; &amp; chr(13) &amp; &quot;Das Programm wird beendet!&quot;
		stop
end sub



&apos;¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯
 function prepareDBStatement(sPreparedQuery as String) as object
&apos;_______________________________________________________________
	prepareDBStatement = oDBConnection.prepareStatement(changeChar(sPreparedQuery, &quot;~&quot;, sDBSep))
&apos;	prepareDBStatement = oDBConnection.prepareStatement(sPreparedQuery)
end function



&apos;¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯
 function queryDB(sSQL as string) as object
&apos;__________________________________________

	queryDB = oSQL.executeQuery(changeChar(sSQL, &quot;~&quot;, sDBSep)
end function



&apos;¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯
 function updateDB(sSQL as string, optional oStatement as object)
&apos;_________________________________

	on error goto err_updateDB
		if isMissing(oStatement) then
			updateDB = oSQL.executeUpdate(changeChar(sSQL, &quot;~&quot;, sDBSep))
		else
			updateDB = oStatement.executeUpdate(changeChar(sSQL, &quot;~&quot;, sDBSep))
		end if
		exit function
	err_updateDB:
		msgbox sSQL
		resume next
	
end function



&apos;¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯
 function queryUniqueID() as double
&apos;__________________________________
	if not bLocale then
		oResult = oSQL.executeQuery(&quot;select last_insert_id()&quot;)
	else
		oResult = oSQL.executeQuery(&quot;select IDENTITY() from &quot;&quot;angebote&quot;&quot;&quot;)
	end if
	oResult.next
	queryUniqueID = oResult.getDouble(1)
end function


&apos;¯¯¯¯¯¯¯¯¯¯¯¯
 sub syncLocalDB()
&apos;____________

	dim oLocalSQL as object, oMeta as object
	dim aSteps() as String, s as String, s1 as String, i&amp;, iIdx&amp;, a() as String
	
	const sTables = &quot;~ansprechpartner~,~artikelstamm~,~druckverlust~,~einbauart~,~kategorie~,~klassen~,~pakete~,~rohrwerte~,~schalldruckpegel~,~schalleistungspegel~,~stueckliste~,~system~,~werksvertretung~,~widerstandsbeiwerte~&quot;
	dim aTables() as String
	
	aTables = split(sTables, &quot;,&quot;)
	initGlobal()

	
	oDBContext = createUnoService(&quot;com.sun.star.sdb.DatabaseContext&quot;)
	oDBSource = oDBContext.getByName(BASEPATH &amp; &quot;WestaMySQL.odb&quot;)
	oDBConnection = oDBSource.getConnection(&quot;westa&quot;, &quot;&quot;)
	oSQL = oDBConnection.createStatement()
	
&apos; 080128-SK: Zusammenführung der verschiedenen HSQL-DBs im Sourcen-Ordner: BASEPATH &gt; LOCALDBPATH
	msgbox &quot;Synchronisiere die Datenbank in &quot; &amp; LOCALDBPATH
	oDBSource = oDBContext.getByName(LOCALDBPATH &amp; &quot;WestaHSQL.odb&quot;)
	oDBConnection = oDBSource.getConnection(&quot;&quot;, &quot;&quot;)
	oLocalSQL = oDBConnection.createStatement()
	bLocale = true
	
	for iIdx = 0 to UBound(aTables())
		sDBSep = &quot;&quot;
		oResult = queryDB(&quot;select * from &quot; &amp; aTables(iIdx))	
		
		if not isNull(oResult) then
			sDBSep = &quot;&quot;&quot;&quot;
			updateDB(&quot;delete from &quot; &amp; aTables(iIdx), oLocalSQL)
			oMeta = oResult.getMetaData()
			s = &quot;&quot;
			for i = 1 to oMeta.getColumnCount()
				s1 = oMeta.getColumnTypeName(i)
				if UCase(s1) = &quot;CHAR&quot; or UCase(s1) = &quot;VARCHAR&quot; then
					s = s &amp; &quot;&apos;;&quot;
				else
					s = s &amp; &quot;;&quot;
				end if
			next
			s = left(s, len(s)-1)
			a = split(s, &quot;;&quot;)
		
			while oResult.next
				s = &quot;insert into &quot; &amp; aTables(iIdx) &amp; &quot; values(&quot;
				for i = 1 to oMeta.getColumnCount()
					s1 = oResult.getString(i)
					if (s1 = &quot;&quot; and a(i-1) &lt;&gt; &quot;&apos;&quot;) then s1 = &quot;NULL&quot;
					s = s &amp; a(i-1) &amp; s1 &amp; a(i-1) &amp; &quot;,&quot;
				next
				s = left(s, len(s)-1) &amp; &quot;)&quot;
				updateDB(s, oLocalSQL)
			wend
		end if
	next
	msgbox(&quot;Datenbank-Synchronisierung beendet&quot;)
	updateDB(&quot;commit&quot;, oLocalSQL)
	oLocalSQL.close()
	oDBConnection.close()
end sub

</script:module>