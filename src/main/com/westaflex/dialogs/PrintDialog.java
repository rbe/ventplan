/*
 * PrintDialog.java
 *
 * Created on 11. Juni 2007, 12:36
 */

package com.westaflex.dialogs;

import com.seebass.tools.Tools;
import com.sun.star.beans.XPropertySet;
import com.sun.star.comp.beans.OfficeDocument;
import com.sun.star.container.XNameAccess;
import com.sun.star.text.XTextFieldsSupplier;
import com.sun.star.uno.UnoRuntime;
import com.westaflex.component.classes.DocumentAware;
import com.westaflex.resource.Strings.Strings;
import java.awt.Dimension;
import java.awt.print.PrinterJob;
import javax.swing.JCheckBox;

/**
 *
 * @author  Oliver
 */
public class PrintDialog extends javax.swing.JDialog {
    
    private String printerName = null;
    
    private int copyCount = 1;
    
    private boolean printProjektierung;
    
    private boolean printLuftmengenermittlung;
    
    private boolean printAkustischeBerechnung;
    
    private boolean printDruckverlustberechnung;
    
    private boolean rc = false;
    
    /** Creates new form PrintDialog */
    public PrintDialog(java.awt.Frame parent, boolean modal) {
        
        super(parent, modal);
        initComponents();
        Dimension d = parent.getPreferredSize();
        setLocation(d.width/2-getWidth()/2, d.height/2-getHeight()/2);
        try{
            printerName = PrinterJob.getPrinterJob().getPrintService().getName();
        } catch (Exception e){
            Tools.errbox(Strings.ERROR_NO_PRINTER, Strings.ERROR);
            e.printStackTrace();
        }
    }
    
    public boolean execute(final Dimension d){
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                setLocation(d.width/2-getWidth()/2, d.height/2-getHeight()/2);
                setVisible(true);
                System.out.println(this.toString());
            }
        });
        System.out.println(this.toString());
        return rc;
    }
    
    public String getPrinterName() {
        return printerName;
    }
    
    public int getCopyCount() {
        return copyCount;
    }
    
    public boolean isPrintProjektierung() {
        return printProjektierung;
    }
    
    public void setPrintLuftmengenermittlung(boolean printLuftmengenermittlung) {
        this.printLuftmengenermittlung = printLuftmengenermittlung;
    }
    
    public boolean isPrintAkustischeBerechnung() {
        return printAkustischeBerechnung;
    }
    
    public boolean isPrintDruckverlustberechnung() {
        return printDruckverlustberechnung;
    }
    
    
    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc=" Generated Code ">//GEN-BEGIN:initComponents
    private void initComponents() {
        pbPrinter = new javax.swing.JButton();
        jPanel1 = new javax.swing.JPanel();
        cxProjektierung = new javax.swing.JCheckBox();
        cxLuftmengenermittlung = new javax.swing.JCheckBox();
        cxAkustischeBerechnungen = new javax.swing.JCheckBox();
        cxDruckverlustberechnung = new javax.swing.JCheckBox();
        jPanel2 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        spExemplare = new javax.swing.JSpinner();
        pbOK = new javax.swing.JButton();
        pbCancel = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Drucken...");
        setResizable(false);
        pbPrinter.setText("Drucker einrichten");
        pbPrinter.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                pbPrinterActionPerformed(evt);
            }
        });

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder("Druckbereich"));
        cxProjektierung.setSelected(true);
        cxProjektierung.setText("Angaben zur Projektierung");
        cxProjektierung.setToolTipText("Allgemein");
        cxProjektierung.setBorder(javax.swing.BorderFactory.createEmptyBorder(0, 0, 0, 0));
        cxProjektierung.setMargin(new java.awt.Insets(0, 0, 0, 0));

        cxLuftmengenermittlung.setSelected(true);
        cxLuftmengenermittlung.setText("Luftmengenermittlung");
        cxLuftmengenermittlung.setToolTipText("Luftmengen");
        cxLuftmengenermittlung.setBorder(javax.swing.BorderFactory.createEmptyBorder(0, 0, 0, 0));
        cxLuftmengenermittlung.setMargin(new java.awt.Insets(0, 0, 0, 0));

        cxAkustischeBerechnungen.setSelected(true);
        cxAkustischeBerechnungen.setText("Akustische Berechnungen");
        cxAkustischeBerechnungen.setToolTipText("Akustik");
        cxAkustischeBerechnungen.setBorder(javax.swing.BorderFactory.createEmptyBorder(0, 0, 0, 0));
        cxAkustischeBerechnungen.setMargin(new java.awt.Insets(0, 0, 0, 0));

        cxDruckverlustberechnung.setSelected(true);
        cxDruckverlustberechnung.setText("Druckverlustberechnungen");
        cxDruckverlustberechnung.setToolTipText("Druckverlust");
        cxDruckverlustberechnung.setBorder(javax.swing.BorderFactory.createEmptyBorder(0, 0, 0, 0));
        cxDruckverlustberechnung.setMargin(new java.awt.Insets(0, 0, 0, 0));

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(cxProjektierung)
                    .addComponent(cxLuftmengenermittlung)
                    .addComponent(cxAkustischeBerechnungen)
                    .addComponent(cxDruckverlustberechnung))
                .addContainerGap(37, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(cxProjektierung)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(cxLuftmengenermittlung)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(cxAkustischeBerechnungen)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(cxDruckverlustberechnung)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder("Exemplare"));
        jLabel1.setText("Anzahl der Exemplare");

        spExemplare.setValue(1);

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(spExemplare, javax.swing.GroupLayout.PREFERRED_SIZE, 66, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(spExemplare, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(19, Short.MAX_VALUE))
        );

        pbOK.setText("OK");
        pbOK.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                pbOKActionPerformed(evt);
            }
        });

        pbCancel.setText("Abbrechen");
        pbCancel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                pbCancelActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(pbPrinter, javax.swing.GroupLayout.DEFAULT_SIZE, 206, Short.MAX_VALUE)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                        .addComponent(jPanel1, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jPanel2, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(layout.createSequentialGroup()
                            .addComponent(pbOK)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(pbCancel))))
                .addContainerGap())
        );

        layout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {pbCancel, pbOK});

        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(pbPrinter)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(pbCancel)
                    .addComponent(pbOK))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        layout.linkSize(javax.swing.SwingConstants.VERTICAL, new java.awt.Component[] {pbCancel, pbOK});

        pack();
    }// </editor-fold>//GEN-END:initComponents
    
    private void pbPrinterActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_pbPrinterActionPerformed
        PrinterJob pjob = PrinterJob.getPrinterJob();
        if (pjob.printDialog()) {
            printerName = pjob.getPrintService().getName();
            copyCount = pjob.getCopies();
            spExemplare.setValue(copyCount);
        }
    }//GEN-LAST:event_pbPrinterActionPerformed
    
    private void pbCancelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_pbCancelActionPerformed
        rc = false;
        dispose();
    }//GEN-LAST:event_pbCancelActionPerformed
    
    private void pbOKActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_pbOKActionPerformed
        rc = true;
        copyCount = (Integer) spExemplare.getValue();
        printProjektierung = cxProjektierung.getModel().isSelected();
        printLuftmengenermittlung = cxLuftmengenermittlung.getModel().isSelected();
        printAkustischeBerechnung = cxAkustischeBerechnungen.getModel().isSelected();
        printDruckverlustberechnung = cxDruckverlustberechnung.getModel().isSelected();
        dispose();
    }//GEN-LAST:event_pbOKActionPerformed
    
    public boolean getRC() {
        return rc;
    }
    
    public void setControlSwitches(OfficeDocument oDoc) {
        
        JCheckBox[] cxPrint = new JCheckBox[] {
            cxProjektierung,
            cxLuftmengenermittlung,
            cxAkustischeBerechnungen,
            cxDruckverlustberechnung};
        
        XTextFieldsSupplier xTFS = (XTextFieldsSupplier) UnoRuntime.queryInterface(
                XTextFieldsSupplier.class, oDoc);
        XNameAccess tfm = xTFS.getTextFieldMasters();
        XPropertySet xPropSet;
        String myRef = null;
        for (int i = 0; i < cxPrint.length; i++) {
            myRef = DocumentAware.myPrefix + "_CS_" + cxPrint[i].getToolTipText();
            if (tfm.hasByName(myRef)){
                xPropSet = null;
                try {
                    xPropSet = (XPropertySet) UnoRuntime.queryInterface(XPropertySet.class, tfm.getByName(myRef));
                    xPropSet.setPropertyValue("Content", cxPrint[i].isSelected()?"1":"0");
                } catch (Exception ex) {
                    ex.printStackTrace();
                }
            }
        }
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JCheckBox cxAkustischeBerechnungen;
    private javax.swing.JCheckBox cxDruckverlustberechnung;
    private javax.swing.JCheckBox cxLuftmengenermittlung;
    private javax.swing.JCheckBox cxProjektierung;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JButton pbCancel;
    private javax.swing.JButton pbOK;
    private javax.swing.JButton pbPrinter;
    private javax.swing.JSpinner spExemplare;
    // End of variables declaration//GEN-END:variables
    
}